单例模式（Singleton Pattern
    这种模式涉及到一个单一的类，该类负责创建自己的对象，同时确保只有单个对象被创建。这个类提供了一种访问其唯一的对象的方式，
可以直接访问，不需要实例化该类的对象。

单例模式的主要有以下角色：
    - 单例类。只能创建一个实例的类
    - 访问类。使用单例类

单例模式的分类：
    - 饿汉式: 类加载就会导致该单实例对象被创建 (天然线程安全)
        - 静态变量方式
        - 静态代码块方式
        - 枚举式
    - 懒汉式: 类加载不会导致该单实例对象被创建，而是首次使用该对象时才会创建
        - 线程不安全式
        - 线程安全式-方法级别锁
        - 双重检查锁方式
        - 静态内部类式

序列化和反序列化破坏了单例设计模式。
    https://blog.csdn.net/leo187/article/details/104332138
反射破坏了单例设计模式。


